{"version":3,"sources":["components/organisms/DishForm/styled.js","components/molecules/InputField/styled.js","components/molecules/InputField/index.js","components/atoms/MainTitle/index.js","components/atoms/Title/index.js","components/atoms/Button/index.js","components/organisms/DishForm/sendDish.js","components/organisms/DishForm/index.js","views/App.js","assets/images/emptyBoard.jpg","assets/GlobalStyles/GlobalStyles.js","store.js","index.js","assets/Theme/theme.js"],"names":["FormWrapper","styled","form","theme","colors","mainBackground","media","mobile","InputWrapper","div","StyledLabel","label","fontSize","normal","small","StyledField","Field","grey","ekstraMobile","InputField","name","component","type","placeholder","options","step","min","max","normalize","htmlFor","id","required","map","option","value","MainTitle","h1","large","mainText","scoripion","big","Title","h2","StyledButton","button","buttonText","teal","handleServerResponse","response","alert","JSON","stringify","convertToNumber","Number","addSeconds","length","DishForm","preparation_time","no_of_slices","diameter","spiciness_scale","slices_of_bread","onSubmit","event","dishToSend","preventDefault","trim","basicData","dishToSubmit","fetch","method","headers","body","then","json","responseMessage","catch","error","console","reduxForm","initialValues","selector","formValueSelector","connect","state","App","GlobalStyle","createGlobalStyle","backgroundImage","reducer","combineReducers","reduxFormReducer","store","window","devToolsExtension","createStore","ReactDOM","render","StrictMode","buttonBackground","mercury","crimson","document","getElementById"],"mappings":"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","file":"static/js/main.c5a6d9ec.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FormWrapper = styled.form`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin-top: 23%;\r\n  margin-bottom: 5%;\r\n  padding: 20px 30px;\r\n  background-color: ${({ theme }) => theme.colors.mainBackground};\r\n  font-size: 18px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Field } from 'redux-form';\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 0.4fr 1fr;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  font-size: ${({ theme }) => theme.fontSize.normal};\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n    font-size: ${({ theme }) => theme.fontSize.small};\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledField = styled(Field)`\r\n  width: 400px;\r\n  padding: 10px 20px;\r\n  border: 2px solid ${({ theme }) => theme.colors.grey};\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n    width: 300px;\r\n    padding: 10px 10px;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.ekstraMobile}px) {\r\n    width: 200px;\r\n    padding: 10px 10px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { InputWrapper, StyledLabel, StyledField } from './styled';\r\n\r\nconst InputField = ({\r\n  label,\r\n  name,\r\n  component,\r\n  type,\r\n  placeholder,\r\n  options,\r\n  step,\r\n  min,\r\n  max,\r\n  normalize,\r\n}) => {\r\n  return (\r\n    <InputWrapper>\r\n      <StyledLabel htmlFor={name}>{label}:</StyledLabel>\r\n      {component === 'select' ? (\r\n        <StyledField\r\n          name={name}\r\n          component=\"select\"\r\n          id={name}\r\n          normalize={normalize}\r\n          required\r\n        >\r\n          <option />\r\n          {options.map((option) => (\r\n            <option key={option} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </StyledField>\r\n      ) : (\r\n        <StyledField\r\n          id={name}\r\n          name={name}\r\n          component={component}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          step={step}\r\n          min={min}\r\n          max={max}\r\n          normalize={normalize}\r\n          required\r\n        />\r\n      )}\r\n    </InputWrapper>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainTitle = styled.h1`\r\n  font-weight: 700px;\r\n  font-size: ${({ theme }) => theme.fontSize.large};\r\n  color: ${({ theme }) => theme.colors.mainText};\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.scoripion};\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n    font-size: ${({ theme }) => theme.fontSize.big};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n  font-weight: 700px;\r\n  font-size: ${({ theme }) => theme.fontSize.big};\r\n  color: ${({ theme }) => theme.colors.mainText};\r\n  padding-bottom: 5px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.scoripion};\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n    font-size: ${({ theme }) => theme.fontSize.normal};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  font-size: ${({ theme }) => theme.fontSize.normal};\r\n  color: ${({ theme }) => theme.colors.buttonText};\r\n  background-color: ${({ theme }) => theme.colors.teal};\r\n  border: 2px solid ${({ theme }) => theme.colors.scoripion};\r\n  box-shadow: 8px 8px 15px 2px rgba(0, 0, 0, 0.21);\r\n  padding: 10px 30px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n","export const sendDish = (dishToSend) => {\r\n  fetch('https://frosty-wood-6558.getsandbox.com:443/dishes', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(dishToSend),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((responseMessage) => handleServerResponse(responseMessage))\r\n    .catch((error) => console.error('Something bad happened!', error));\r\n};\r\n\r\nconst handleServerResponse = (response) => {\r\n  alert(`This is server response: ${JSON.stringify(response)}`);\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, formValueSelector } from 'redux-form';\r\nimport { FormWrapper } from './styled';\r\nimport InputField from 'components/molecules/InputField';\r\nimport { MainTitle } from 'components/atoms/MainTitle';\r\nimport { Title } from 'components/atoms/Title';\r\nimport { StyledButton } from 'components/atoms/Button';\r\nimport { sendDish } from './sendDish';\r\n\r\nconst convertToNumber = (value) => value && Number(value);\r\nconst addSeconds = (value) => {\r\n  if (value.length === 5) {\r\n    const newValue = `${value}:00`;\r\n    return newValue;\r\n  }\r\n  return value;\r\n};\r\n\r\nlet DishForm = ({\r\n  name,\r\n  preparation_time,\r\n  type,\r\n  no_of_slices,\r\n  diameter,\r\n  spiciness_scale,\r\n  slices_of_bread,\r\n}) => {\r\n  const dishToSubmit = (basicData, type) => {\r\n    if (type === 'pizza') {\r\n      return {\r\n        ...basicData,\r\n        no_of_slices,\r\n        diameter,\r\n      };\r\n    }\r\n\r\n    if (type === 'soup') {\r\n      return {\r\n        ...basicData,\r\n        spiciness_scale,\r\n      };\r\n    }\r\n\r\n    if (type === 'sandwich') {\r\n      return {\r\n        ...basicData,\r\n        slices_of_bread,\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (name.trim().length === 0) {\r\n      alert('Please fill dish name field');\r\n      return;\r\n    }\r\n    const basicData = { name, preparation_time, type };\r\n\r\n    sendDish(dishToSubmit(basicData, type));\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={handleSubmit}>\r\n      <MainTitle>Add your dish</MainTitle>\r\n      <InputField\r\n        label=\"Dish name\"\r\n        name=\"name\"\r\n        component=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Write your dish name\"\r\n      />\r\n      <InputField\r\n        label=\"Preparation time\"\r\n        name=\"preparation_time\"\r\n        component=\"input\"\r\n        type=\"time\"\r\n        step=\"1\"\r\n        normalize={addSeconds}\r\n      />\r\n      <InputField\r\n        label=\"Dish type\"\r\n        name=\"type\"\r\n        component=\"select\"\r\n        options={['pizza', 'soup', 'sandwich']}\r\n      />\r\n      <div>\r\n        {type ? <Title>Details</Title> : ''}\r\n        {type === 'pizza' ? (\r\n          <div>\r\n            <InputField\r\n              label=\"Number of slices\"\r\n              name=\"no_of_slices\"\r\n              component=\"input\"\r\n              type=\"number\"\r\n              placeholder=\"Choose number of slices\"\r\n              normalize={convertToNumber}\r\n            />\r\n            <InputField\r\n              label=\"Diameter\"\r\n              name=\"diameter\"\r\n              component=\"input\"\r\n              type=\"number\"\r\n              min=\"12\"\r\n              step=\"0.1\"\r\n              placeholder=\"Choose size\"\r\n              normalize={convertToNumber}\r\n            />\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {type === 'soup' ? (\r\n          <InputField\r\n            label=\"Spiciness scale\"\r\n            name=\"spiciness_scale\"\r\n            component=\"input\"\r\n            type=\"number\"\r\n            step=\"1\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            placeholder=\"Choose in scale 1-10\"\r\n            normalize={convertToNumber}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {type === 'sandwich' ? (\r\n          <InputField\r\n            label=\"Slices of bread\"\r\n            name=\"slices_of_bread\"\r\n            component=\"input\"\r\n            type=\"number\"\r\n            step=\"1\"\r\n            placeholder=\"Choose number of slices\"\r\n            normalize={convertToNumber}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <StyledButton>Submit your dish</StyledButton>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nDishForm = reduxForm({\r\n  form: 'DishForm',\r\n  initialValues: {\r\n    name: '',\r\n    type: '',\r\n    preparation_time: '00:01:00',\r\n    no_of_slices: 2,\r\n    diameter: 12.5,\r\n    spiciness_scale: 1,\r\n    slices_of_bread: 1,\r\n  },\r\n})(DishForm);\r\n\r\nconst selector = formValueSelector('DishForm');\r\nDishForm = connect((state) => {\r\n  const {\r\n    name,\r\n    preparation_time,\r\n    type,\r\n    no_of_slices,\r\n    diameter,\r\n    spiciness_scale,\r\n    slices_of_bread,\r\n  } = selector(\r\n    state,\r\n    'name',\r\n    'preparation_time',\r\n    'type',\r\n    'no_of_slices',\r\n    'diameter',\r\n    'spiciness_scale',\r\n    'slices_of_bread'\r\n  );\r\n  return {\r\n    name,\r\n    preparation_time,\r\n    type,\r\n    no_of_slices,\r\n    diameter,\r\n    spiciness_scale,\r\n    slices_of_bread,\r\n  };\r\n})(DishForm);\r\n\r\nexport default DishForm;\r\n","import React from 'react';\r\nimport DishForm from 'components/organisms/DishForm';\r\n\r\nfunction App() {\r\n  return <DishForm />;\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/emptyBoard.a5adad57.jpg\";","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\nimport backgroundImage from 'assets/images/emptyBoard.jpg';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n        html {\r\n        box-sizing: border-box\r\n      }\r\n      *,\r\n      *::before,\r\n      *::after {\r\n        box-sizing: inherit;\r\n    } \r\n      body {\r\n        width:100vw;\r\n        display:flex;\r\n        justify-content:center;\r\n        align-items:center;\r\n        font-family: 'Josefin Sans', sans-serif;\r\n        font-weight: 400;\r\n        background-image:url(${backgroundImage});\r\n        background-repeat:no-repeat;\r\n        background-size: cover;\r\n        color: ${({ theme }) => theme.colors.mainText};\r\n\r\n        @media (max-width: ${({ theme }) => theme.media.mobile}px) {\r\n        padding: 20px;\r\n        }\r\n    }\r\n`;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\n\r\nconst reducer = combineReducers({\r\n  form: reduxFormReducer, // mounted under \"form\"\r\n});\r\nconst store = (window.devToolsExtension\r\n  ? window.devToolsExtension()(createStore)\r\n  : createStore)(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport App from 'views/App';\nimport { theme } from 'assets/Theme/theme';\nimport { GlobalStyle } from 'assets/GlobalStyles/GlobalStyles';\nimport store from 'store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export const theme = {\r\n  fontSize: {\r\n    small: '16px',\r\n    normal: '18px',\r\n    big: '24px',\r\n    large: '32px',\r\n  },\r\n  colors: {\r\n    mainBackground: '#fff',\r\n    mainText: '#000000',\r\n    buttonBackground: '#000000',\r\n    buttonText: '#ffffff',\r\n    grey: '#8B8C89',\r\n    mercury: '#E5E5E5',\r\n    scoripion: '#5E5E5E',\r\n    teal: ' #008080',\r\n    crimson: '#dc143c',\r\n  },\r\n  media: {\r\n    ekstraMobile: '400',\r\n    mobile: '660',\r\n  },\r\n};\r\n"],"sourceRoot":""}